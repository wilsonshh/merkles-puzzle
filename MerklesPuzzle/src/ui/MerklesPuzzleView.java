/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import core.PuzzleCracker;
import core.PuzzleGenerator;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import util.PuzzleWriter;
import lib.CryptoLib;
import lib.DES;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * This class is used for the user interface.
 *
 * @author Wilson Shrestha
 */
public class MerklesPuzzleView extends javax.swing.JFrame {

    /**
     * Creates new form MerklePuzzleView
     */
    public MerklesPuzzleView() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        startButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        logPanel = new javax.swing.JPanel();
        logScrollPane = new javax.swing.JScrollPane();
        logTextArea = new javax.swing.JTextArea();
        inputPanel = new javax.swing.JPanel();
        inputTabbedPane = new javax.swing.JTabbedPane();
        messageScrollPane = new javax.swing.JScrollPane();
        messageTextArea = new javax.swing.JTextArea();
        encryptedScrollPane = new javax.swing.JScrollPane();
        encryptedTextArea = new javax.swing.JTextArea();
        decryptedScrollPane = new javax.swing.JScrollPane();
        decryptedTextArea = new javax.swing.JTextArea();
        puzzlePanel = new javax.swing.JPanel();
        encryptionLabel = new javax.swing.JLabel();
        encryptionComboBox = new javax.swing.JComboBox<>();
        puzzleLabel = new javax.swing.JLabel();
        puzzleTextField = new javax.swing.JTextField();
        keyLabel = new javax.swing.JLabel();
        keyComboBox = new javax.swing.JComboBox<>();
        distincPuzzleLabel = new javax.swing.JLabel();
        distinctPuzzleComboBox = new javax.swing.JComboBox<>();
        copyButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Clear All");
        clearButton.setActionCommand("clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.setToolTipText("");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        logPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Log"));

        logTextArea.setEditable(false);
        logTextArea.setColumns(20);
        logTextArea.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        logTextArea.setLineWrap(true);
        logTextArea.setRows(5);
        logScrollPane.setViewportView(logTextArea);

        javax.swing.GroupLayout logPanelLayout = new javax.swing.GroupLayout(logPanel);
        logPanel.setLayout(logPanelLayout);
        logPanelLayout.setHorizontalGroup(
            logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logPanelLayout.createSequentialGroup()
                .addComponent(logScrollPane)
                .addContainerGap())
        );
        logPanelLayout.setVerticalGroup(
            logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                .addContainerGap())
        );

        inputPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Input"));

        messageTextArea.setColumns(20);
        messageTextArea.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        messageTextArea.setLineWrap(true);
        messageTextArea.setRows(5);
        messageTextArea.setText("This is a default message.");
        messageScrollPane.setViewportView(messageTextArea);

        inputTabbedPane.addTab("Message", messageScrollPane);

        encryptedTextArea.setEditable(false);
        encryptedTextArea.setColumns(20);
        encryptedTextArea.setLineWrap(true);
        encryptedTextArea.setRows(5);
        encryptedScrollPane.setViewportView(encryptedTextArea);

        inputTabbedPane.addTab("Encrypted", encryptedScrollPane);

        decryptedTextArea.setEditable(false);
        decryptedTextArea.setColumns(20);
        decryptedTextArea.setLineWrap(true);
        decryptedTextArea.setRows(5);
        decryptedScrollPane.setViewportView(decryptedTextArea);

        inputTabbedPane.addTab("Decrypted", decryptedScrollPane);

        javax.swing.GroupLayout inputPanelLayout = new javax.swing.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(inputTabbedPane)
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inputTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                .addContainerGap())
        );

        puzzlePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Options"));

        encryptionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        encryptionLabel.setText("Encryption Method");

        encryptionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DES" }));

        puzzleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        puzzleLabel.setText("Puzzles");

        puzzleTextField.setEditable(false);
        puzzleTextField.setText("1024");

        keyLabel.setText("Key");

        keyComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "64-bit" }));

        distincPuzzleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        distincPuzzleLabel.setText("Distinct Puzzle");

        distinctPuzzleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "16-bit" }));

        javax.swing.GroupLayout puzzlePanelLayout = new javax.swing.GroupLayout(puzzlePanel);
        puzzlePanel.setLayout(puzzlePanelLayout);
        puzzlePanelLayout.setHorizontalGroup(
            puzzlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(puzzlePanelLayout.createSequentialGroup()
                .addGroup(puzzlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(puzzlePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(puzzleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(puzzleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(puzzlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(distinctPuzzleComboBox, 0, 106, Short.MAX_VALUE)
                    .addComponent(distincPuzzleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(puzzlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(puzzlePanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(keyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(puzzlePanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(keyLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(puzzlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(encryptionComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(encryptionLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        puzzlePanelLayout.setVerticalGroup(
            puzzlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(puzzlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(puzzlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(encryptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(puzzleLabel)
                    .addComponent(distincPuzzleLabel)
                    .addComponent(keyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(puzzlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(encryptionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(puzzleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(keyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(distinctPuzzleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        copyButton.setText("Copy Log");
        copyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(puzzlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(copyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exitButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(logPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(puzzlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startButton)
                    .addComponent(clearButton)
                    .addComponent(exitButton)
                    .addComponent(copyButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * This method is used to simulate the merkle's process process.
     *
     * @throws java.lang.Exception
     */
    public void runMerklesPuzzleProcess() throws Exception {
        DES des = new DES();
        logTextArea.setText("Initializing puzzle generator....\n");
        PuzzleGenerator generator = new PuzzleGenerator();

        PuzzleWriter puzzleWriter = new PuzzleWriter();
        generator.writePuzzles();
        logTextArea.append("Puzzle file created.\n");

        logTextArea.append("Initializing puzzle cracker....\n");

        PuzzleCracker cracker = new PuzzleCracker();
        int crackedPuzzleNumber = cracker.crackPuzzle();

        logTextArea.append("Initializing key look up....\n");

        byte[] key = generator.selectKey(crackedPuzzleNumber);
        logTextArea.append("\nDistinct Puzzle:" + crackedPuzzleNumber + "\n64-bit Key: " + CryptoLib.byteArrayToString(key));

        String message = messageTextArea.getText();
        logTextArea.append("\nInitializing encryption process....\n");
        logTextArea.append("\nMessage:" + message);

        String encryptedMessage = des.encryptString(message, CryptoLib.createKey(key));
        logTextArea.append("\n\nEncrypted Message: " + encryptedMessage);

        encryptedTextArea.setText("------------ BEGIN MESSAGE --------------"
                + "\n" + "\n" + encryptedMessage + "\n" + "\n" + "------------- END MESSAGE --------------");

        String decryptedMessage = des.decryptString(encryptedMessage, CryptoLib.createKey(key));
        logTextArea.append("\nDecrypted Message: " + decryptedMessage);
        decryptedTextArea.setText("------------ BEGIN MESSAGE --------------"
                + "\n" + "\n" + decryptedMessage + "\n" + "\n" + "------------- END MESSAGE --------------\n\n");
    }

    /**
     * This button is used to start the merkle's puzzle process.
     *
     * @param evt Action event for start button.
     */
    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        try {
            runMerklesPuzzleProcess();
        } catch (Exception ex) {
            Logger.getLogger(MerklesPuzzleView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_startButtonActionPerformed

    /**
     * This method is used to clear the logs, encryption and decryption text
     * areas.
     *
     * @param evt Action event for the clear button.
     */
    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        encryptedTextArea.setText("");
        decryptedTextArea.setText("");
        logTextArea.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    /**
     * This method is used to exit the application.
     *
     * @param evt, Action event for the exit button
     */
    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    /**
     * This method is used to copy strings from the log text area.
     *
     * @param evt, Action event for copy button.
     */
    private void copyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyButtonActionPerformed
        StringSelection stringSelection = new StringSelection(logTextArea.getText());
        Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
        clpbrd.setContents(stringSelection, null);
    }//GEN-LAST:event_copyButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MerklesPuzzleView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MerklesPuzzleView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MerklesPuzzleView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MerklesPuzzleView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MerklesPuzzleView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton copyButton;
    private javax.swing.JScrollPane decryptedScrollPane;
    private javax.swing.JTextArea decryptedTextArea;
    private javax.swing.JLabel distincPuzzleLabel;
    private javax.swing.JComboBox<String> distinctPuzzleComboBox;
    private javax.swing.JScrollPane encryptedScrollPane;
    private javax.swing.JTextArea encryptedTextArea;
    private javax.swing.JComboBox<String> encryptionComboBox;
    private javax.swing.JLabel encryptionLabel;
    private javax.swing.JButton exitButton;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JTabbedPane inputTabbedPane;
    private javax.swing.JComboBox<String> keyComboBox;
    private javax.swing.JLabel keyLabel;
    private javax.swing.JPanel logPanel;
    private javax.swing.JScrollPane logScrollPane;
    private javax.swing.JTextArea logTextArea;
    private javax.swing.JScrollPane messageScrollPane;
    private javax.swing.JTextArea messageTextArea;
    private javax.swing.JLabel puzzleLabel;
    private javax.swing.JPanel puzzlePanel;
    private javax.swing.JTextField puzzleTextField;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables
}
